@model Scheduler.ViewModels.Test
@{
    ViewData["Title"] = "Home Page";
    var ci = new System.Globalization.CultureInfo("en-US");
}

@inject UserManager<ApplicationUser> UserManager


<h1>@ViewData["Message"]</h1>

<div id="alert-placeholder"></div>

<ul class="doctors">
    @{int i = 0;}
    @foreach (var doctor in Model.Doctors)
    {

        <li id=li_id_@i>
            <div class="panel-group" id="accordion">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#@doctor.Id">
                                <div class="image">
                                    <img width="64" height="64" src="/Home/ViewImage/@doctor.Id" />
                                </div>
                                <div class="details">
                                    <div class="Name" style="font-size:20px"><strong>@doctor.Name @doctor.Surname</strong></div>
                                    <div class="Scope">@doctor.Scope</div>
                                </div>
                            </a>
                        </h4>
                    </div>
                    <div id="@doctor.Id" class="panel-collapse collapse">
                        <div class="panel-body">
                            <div>Address: @doctor.Address - @doctor.Office</div>
                            <div>Phone: @doctor.PhoneNumber</div>

                            <br />

                            <div class="form-group">
                                <label>Select day:</label>
                                <select name="selectDay" id="selectDay-@doctor.Id" class="form-control" onchange="populate(@doctor.Id)">

                                    <option disabled selected value="">-- select day --</option>

                                    @for (int j = 0; j <= DateTime.DaysInMonth(DateTime.Now.Year, DateTime.Now.Month); j++)
                                    {
                                        @if ((DateTime.Now.AddDays(j).ToString("ddd", ci) == "Mon" && doctor.DoctorWorkHours.MondayFrom != null) ||
                                      (DateTime.Now.AddDays(j).ToString("ddd", ci) == "Tue" && doctor.DoctorWorkHours.TuesdayFrom != null) ||
                                      (DateTime.Now.AddDays(j).ToString("ddd", ci) == "Wed" && doctor.DoctorWorkHours.WednesdayFrom != null) ||
                                      (DateTime.Now.AddDays(j).ToString("ddd", ci) == "Thu" && doctor.DoctorWorkHours.ThursdayFrom != null) ||
                                      (DateTime.Now.AddDays(j).ToString("ddd", ci) == "Fri" && doctor.DoctorWorkHours.FridayFrom != null) ||
                                      (DateTime.Now.AddDays(j).ToString("ddd", ci) == "Sat" && doctor.DoctorWorkHours.SaturdayFrom != null) ||
                                      (DateTime.Now.AddDays(j).ToString("ddd", ci) == "Sun" && doctor.DoctorWorkHours.SundayFrom != null))
                                        {
                                            <option value="@DateTime.Now.AddDays(j).DayOfWeek.ToString("d")">
                                                @DateTime.Now.AddDays(j).DayOfWeek ( @DateTime.Now.AddDays(j).ToString("MM/dd") )
                                            </option>
                                        }

                                    }
                                </select>
                            </div>

                            <div class="form-group">
                                <label>Select time:</label>
                                <select id="selectTime-@doctor.Id" class="form-control">
                                    <option disabled selected value="">-- select one --</option>
                                </select>
                            </div>

                            <button class="btn doctorn-default" onclick="register(@doctor.Id)">Register</button>
                        </div>
                    </div>
                </div>
            </div>
        </li>
        i++;
    }

</ul>

<div class="pagination">
    <a href="#" onclick="paginationBackward()">&laquo;</a>
    @for (int j = 1; j < (Model.Doctors.Count() / 5) + 2; j++)
    {
        <a id="pagiId_@j" onclick="paginationClick(@j)" class="pagiB" href="#">@j</a>
    }
    <a id="pagiFw" href="#" onclick="paginationForward()">&raquo;</a>
</div>



<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>
    function populate(doctorId) {

        $("#selectTime-" + doctorId).html("");

        $.getJSON("/Home/GetJson/", { DayId: $("#selectDay-" + doctorId).val(), doctorId: doctorId, day: $("#selectDay-" + doctorId + " option:selected").text().trim() }, function (data) {

            for (var obj in data) {
                $("#selectTime-" + doctorId).append("<option value='2'>" + data[obj].text + "</option>");
            }
        });
    }

    function register(doctorId) {

        var val = $("#selectDay-" + doctorId + " option:selected").text();
        var val2 = $("#selectTime-" + doctorId + " option:selected").text();

        $.post("/api/Appointments/Appointment", { doctorId: doctorId, day: val.toString(), time: val2.toString() })
            .done(function () {
                alert("You successfully registred on " + val.trim() + " at " + val2);
                //$('#alertmsg').show();
                populate(doctorId);
            }).fail(function () {
                alert("Something failed!");
            });

    }

    function paginationClick(id) {
        $(".active").removeClass("active");
        $("#pagiId_" + id).addClass("active");
        showDoctorsOnPagination(id)
    }

    function paginationForward() {
        var listItems = $(".pagiB").length;
        var id = parseInt($(".active").attr("id").slice(7));

        if (id < $(".pagiB").length) {
            id = id + 1;
            $(".active").removeClass("active");
            $("#pagiId_" + id).addClass("active");
            showDoctorsOnPagination(id);
        }
    }

    function paginationBackward() {
        var listItems = $(".pagiB").length;
        var id = parseInt($(".active").attr("id").slice(7));

        if (id > 1) {
            id = id - 1;
            $(".active").removeClass("active");
            $("#pagiId_" + id).addClass("active");
            showDoctorsOnPagination(id);
        }
    }

    function showDoctorsOnPagination(id) {
        var listItems = $(".doctors li");
        listItems.hide();
        var start = (id - 1) * 5
        var index = 0;
        for (let li of listItems) {
            if (index >= start && index < start + 5) {
                $(li).show();
            }
            index++;
        }
    }

    $(document).ready(function () {
        $("#pagiId_1").addClass("active");
        var index = 0;
        var listItems = $(".doctors li");
        for (let li of listItems) {
            if (index > 4) {
                $(li).hide();
            }
            index++;
        }
        runOncePerDay();
    })

    function hasOneDayPassed() {
        var date = new Date().toLocaleDateString();

        if (localStorage.yourapp_date == date)
            return false;

        localStorage.yourapp_date = date;
        return true;
    }

    // some function which should run once a day
    function runOncePerDay() {
        if (!hasOneDayPassed()) return false;

        $.getJSON("api/Appointments/GetAppointments", null, function (data) {
            console.log("suveike");
            for (var obj in data) {
                $("#alert-placeholder").append('<div class="alert alert-info" role="alert">Appointment at ' + data[obj]["appointmentDate"] + '<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
            }
        });
    }

      
</script>